import React from "react";
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
  Toast,
  Button,
  Input,
  Textarea,
  Badge,
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "../../index";

export function ToastPage() {
  const [messages, setMessages] = React.useState<string[]>([]);

  const showToast = (message: string) => {
    setMessages((prev) => [...prev, message]);
  };

  return (
    <div className="space-y-8">
      <div>
        <h1 className="text-3xl font-bold">Toast Component</h1>
        <p className="text-muted-foreground mt-2">
          Componente de notifica√ß√£o toast para exibir mensagens tempor√°rias ao
          usu√°rio.
        </p>
      </div>

      <div className="grid gap-6">
        {/* Toast B√°sico */}
        <Card>
          <CardHeader>
            <CardTitle>Toast B√°sico</CardTitle>
            <CardDescription>
              Diferentes tipos de notifica√ß√µes toast
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="grid md:grid-cols-2 gap-4">
                <Button
                  onClick={() => showToast("Opera√ß√£o realizada com sucesso!")}
                  className="w-full"
                >
                  Toast de Sucesso
                </Button>

                <Button
                  onClick={() => showToast("Erro ao processar a solicita√ß√£o")}
                  variant="destructive"
                  className="w-full"
                >
                  Toast de Erro
                </Button>

                <Button
                  onClick={() => showToast("Aten√ß√£o: Esta a√ß√£o √© irrevers√≠vel")}
                  variant="outline"
                  className="w-full"
                >
                  Toast de Aviso
                </Button>

                <Button
                  onClick={() => showToast("Nova mensagem recebida")}
                  variant="secondary"
                  className="w-full"
                >
                  Toast de Informa√ß√£o
                </Button>
              </div>

              {messages.length > 0 && (
                <div className="mt-6 p-4 bg-muted rounded-lg">
                  <h4 className="font-medium mb-2">Mensagens de Toast:</h4>
                  <div className="space-y-1">
                    {messages.map((message, index) => (
                      <div
                        key={index}
                        className="text-sm flex items-center gap-2"
                      >
                        <Badge variant="outline" className="text-xs">
                          {index + 1}
                        </Badge>
                        {message}
                      </div>
                    ))}
                  </div>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => setMessages([])}
                    className="mt-3"
                  >
                    Limpar Hist√≥rico
                  </Button>
                </div>
              )}
            </div>
          </CardContent>
        </Card>

        {/* Toast com A√ß√µes */}
        <Card>
          <CardHeader>
            <CardTitle>Toast com A√ß√µes</CardTitle>
            <CardDescription>Toasts que incluem bot√µes de a√ß√£o</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="grid md:grid-cols-2 gap-4">
                <Button
                  onClick={() => showToast("Email enviado com sucesso! ‚úì")}
                  className="w-full"
                >
                  Enviar Email
                </Button>

                <Button
                  onClick={() => showToast("Arquivo salvo automaticamente üíæ")}
                  variant="outline"
                  className="w-full"
                >
                  Salvar Arquivo
                </Button>

                <Button
                  onClick={() => showToast("Backup criado com sucesso! üì¶")}
                  variant="secondary"
                  className="w-full"
                >
                  Criar Backup
                </Button>

                <Button
                  onClick={() => showToast("Configura√ß√µes atualizadas ‚öôÔ∏è")}
                  className="w-full"
                >
                  Atualizar Config
                </Button>
              </div>

              <div className="mt-6 p-4 border rounded-lg space-y-3">
                <h4 className="font-medium">Toast Personalizado</h4>
                <div className="flex gap-2">
                  <Input
                    placeholder="Digite sua mensagem..."
                    id="custom-message"
                  />
                  <Button
                    onClick={() => {
                      const input = document.getElementById(
                        "custom-message"
                      ) as HTMLInputElement;
                      if (input.value.trim()) {
                        showToast(input.value);
                        input.value = "";
                      }
                    }}
                  >
                    Mostrar Toast
                  </Button>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Toast de Sistema */}
        <Card>
          <CardHeader>
            <CardTitle>Notifica√ß√µes de Sistema</CardTitle>
            <CardDescription>
              Simula√ß√£o de notifica√ß√µes t√≠picas de aplica√ß√µes
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-3">
                  <h4 className="font-medium text-sm">Autentica√ß√£o</h4>
                  <div className="space-y-2">
                    <Button
                      size="sm"
                      className="w-full"
                      onClick={() =>
                        showToast(
                          "Login realizado com sucesso! Bem-vindo de volta."
                        )
                      }
                    >
                      Simular Login
                    </Button>
                    <Button
                      size="sm"
                      variant="outline"
                      className="w-full"
                      onClick={() =>
                        showToast("Logout realizado. At√© a pr√≥xima!")
                      }
                    >
                      Simular Logout
                    </Button>
                    <Button
                      size="sm"
                      variant="destructive"
                      className="w-full"
                      onClick={() => showToast("Erro: Credenciais inv√°lidas")}
                    >
                      Simular Erro de Login
                    </Button>
                  </div>
                </div>

                <div className="space-y-3">
                  <h4 className="font-medium text-sm">Opera√ß√µes de Dados</h4>
                  <div className="space-y-2">
                    <Button
                      size="sm"
                      className="w-full"
                      onClick={() => showToast("Dados salvos com sucesso!")}
                    >
                      Salvar Dados
                    </Button>
                    <Button
                      size="sm"
                      variant="secondary"
                      className="w-full"
                      onClick={() => showToast("Dados carregados do servidor")}
                    >
                      Carregar Dados
                    </Button>
                    <Button
                      size="sm"
                      variant="destructive"
                      className="w-full"
                      onClick={() =>
                        showToast("Erro: Falha na conex√£o com o servidor")
                      }
                    >
                      Simular Erro de Rede
                    </Button>
                  </div>
                </div>

                <div className="space-y-3">
                  <h4 className="font-medium text-sm">Upload de Arquivos</h4>
                  <div className="space-y-2">
                    <Button
                      size="sm"
                      className="w-full"
                      onClick={() => showToast("Upload iniciado... üì§")}
                    >
                      Iniciar Upload
                    </Button>
                    <Button
                      size="sm"
                      className="w-full"
                      onClick={() =>
                        showToast("Upload conclu√≠do com sucesso! ‚úÖ")
                      }
                    >
                      Upload Completo
                    </Button>
                    <Button
                      size="sm"
                      variant="destructive"
                      className="w-full"
                      onClick={() =>
                        showToast("Erro: Arquivo muito grande (m√°x. 10MB)")
                      }
                    >
                      Erro de Upload
                    </Button>
                  </div>
                </div>

                <div className="space-y-3">
                  <h4 className="font-medium text-sm">Notifica√ß√µes Gerais</h4>
                  <div className="space-y-2">
                    <Button
                      size="sm"
                      variant="outline"
                      className="w-full"
                      onClick={() =>
                        showToast("Nova atualiza√ß√£o dispon√≠vel üîÑ")
                      }
                    >
                      Nova Atualiza√ß√£o
                    </Button>
                    <Button
                      size="sm"
                      variant="outline"
                      className="w-full"
                      onClick={() => showToast("Voc√™ tem 3 novas mensagens üí¨")}
                    >
                      Novas Mensagens
                    </Button>
                    <Button
                      size="sm"
                      variant="outline"
                      className="w-full"
                      onClick={() => showToast("Reuni√£o em 15 minutos ‚è∞")}
                    >
                      Lembrete
                    </Button>
                  </div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Toast de Formul√°rio */}
        <Card>
          <CardHeader>
            <CardTitle>Valida√ß√£o de Formul√°rio</CardTitle>
            <CardDescription>
              Toasts para feedback de valida√ß√£o e envio de formul√°rios
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form
              className="space-y-4"
              onSubmit={(e) => {
                e.preventDefault();
                const formData = new FormData(e.target as HTMLFormElement);
                const name = formData.get("name") as string;
                const email = formData.get("email") as string;
                const message = formData.get("message") as string;

                if (!name || !email || !message) {
                  showToast("Erro: Todos os campos s√£o obrigat√≥rios");
                  return;
                }

                if (!email.includes("@")) {
                  showToast("Erro: Email inv√°lido");
                  return;
                }

                showToast("Formul√°rio enviado com sucesso! üéâ");
                (e.target as HTMLFormElement).reset();
              }}
            >
              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <label htmlFor="name" className="text-sm font-medium">
                    Nome
                  </label>
                  <Input id="name" name="name" placeholder="Seu nome" />
                </div>

                <div className="space-y-2">
                  <label htmlFor="email" className="text-sm font-medium">
                    Email
                  </label>
                  <Input
                    id="email"
                    name="email"
                    type="email"
                    placeholder="seu@email.com"
                  />
                </div>
              </div>

              <div className="space-y-2">
                <label htmlFor="category" className="text-sm font-medium">
                  Categoria
                </label>
                <Select name="category">
                  <SelectTrigger>
                    <SelectValue placeholder="Selecione uma categoria" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="support">Suporte T√©cnico</SelectItem>
                    <SelectItem value="sales">Vendas</SelectItem>
                    <SelectItem value="feedback">Feedback</SelectItem>
                    <SelectItem value="other">Outros</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <label htmlFor="message" className="text-sm font-medium">
                  Mensagem
                </label>
                <Textarea
                  id="message"
                  name="message"
                  placeholder="Digite sua mensagem aqui..."
                  rows={4}
                />
              </div>

              <div className="flex gap-3">
                <Button type="submit">Enviar Formul√°rio</Button>
                <Button
                  type="button"
                  variant="outline"
                  onClick={() => showToast("Rascunho salvo automaticamente üíæ")}
                >
                  Salvar Rascunho
                </Button>
                <Button
                  type="button"
                  variant="secondary"
                  onClick={() => showToast("Pr√©via do email criada üëÄ")}
                >
                  Pr√©via
                </Button>
              </div>
            </form>
          </CardContent>
        </Card>

        {/* Toast Contextual */}
        <Card>
          <CardHeader>
            <CardTitle>Toasts Contextuais</CardTitle>
            <CardDescription>
              Notifica√ß√µes espec√≠ficas para diferentes contextos de uso
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-6">
              <div className="space-y-3">
                <h4 className="font-medium">E-commerce</h4>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                  <Button
                    size="sm"
                    onClick={() => showToast("Item adicionado ao carrinho üõí")}
                  >
                    Adicionar ao Carrinho
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Item removido do carrinho")}
                    variant="outline"
                  >
                    Remover Item
                  </Button>
                  <Button
                    size="sm"
                    onClick={() =>
                      showToast("Pedido realizado com sucesso! üéâ")
                    }
                  >
                    Finalizar Compra
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Pagamento processado ‚úÖ")}
                  >
                    Processar Pagamento
                  </Button>
                </div>
              </div>

              <div className="space-y-3">
                <h4 className="font-medium">Redes Sociais</h4>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                  <Button
                    size="sm"
                    onClick={() => showToast("Post publicado com sucesso! üìù")}
                  >
                    Publicar Post
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Curtida adicionada ‚ù§Ô∏è")}
                    variant="outline"
                  >
                    Curtir
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Coment√°rio adicionado üí¨")}
                    variant="outline"
                  >
                    Comentar
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Post compartilhado üîÑ")}
                    variant="secondary"
                  >
                    Compartilhar
                  </Button>
                </div>
              </div>

              <div className="space-y-3">
                <h4 className="font-medium">Sistema de Arquivos</h4>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                  <Button
                    size="sm"
                    onClick={() => showToast("Pasta criada com sucesso üìÅ")}
                  >
                    Criar Pasta
                  </Button>
                  <Button
                    size="sm"
                    onClick={() =>
                      showToast("Arquivo copiado para √°rea de transfer√™ncia üìã")
                    }
                    variant="outline"
                  >
                    Copiar Arquivo
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Arquivo movido para lixeira üóëÔ∏è")}
                    variant="destructive"
                  >
                    Deletar
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Arquivo renomeado ‚úèÔ∏è")}
                    variant="secondary"
                  >
                    Renomear
                  </Button>
                </div>
              </div>

              <div className="space-y-3">
                <h4 className="font-medium">Configura√ß√µes</h4>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                  <Button
                    size="sm"
                    onClick={() => showToast("Configura√ß√µes salvas ‚öôÔ∏è")}
                  >
                    Salvar Config
                  </Button>
                  <Button
                    size="sm"
                    onClick={() =>
                      showToast("Configura√ß√µes restauradas aos padr√µes")
                    }
                    variant="outline"
                  >
                    Restaurar Padr√µes
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Perfil atualizado üë§")}
                    variant="secondary"
                  >
                    Atualizar Perfil
                  </Button>
                  <Button
                    size="sm"
                    onClick={() => showToast("Senha alterada com sucesso üîí")}
                  >
                    Alterar Senha
                  </Button>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Dicas de Uso */}
        <Card>
          <CardHeader>
            <CardTitle>Dicas de Implementa√ß√£o</CardTitle>
            <CardDescription>
              Boas pr√°ticas para usar toasts em suas aplica√ß√µes
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="grid md:grid-cols-2 gap-6">
                <div className="space-y-3">
                  <h4 className="font-medium text-green-700">
                    ‚úÖ Boas Pr√°ticas
                  </h4>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-green-50"
                      >
                        1
                      </Badge>
                      <span>Use toasts para feedback imediato de a√ß√µes</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-green-50"
                      >
                        2
                      </Badge>
                      <span>Mantenha as mensagens curtas e claras</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-green-50"
                      >
                        3
                      </Badge>
                      <span>
                        Use cores apropriadas (verde=sucesso, vermelho=erro)
                      </span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-green-50"
                      >
                        4
                      </Badge>
                      <span>Inclua emojis para melhor comunica√ß√£o visual</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-green-50"
                      >
                        5
                      </Badge>
                      <span>Configure tempo de exibi√ß√£o apropriado</span>
                    </li>
                  </ul>
                </div>

                <div className="space-y-3">
                  <h4 className="font-medium text-red-700">‚ùå Evite</h4>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-red-50"
                      >
                        1
                      </Badge>
                      <span>
                        Toasts para informa√ß√µes cr√≠ticas que precisam de a√ß√£o
                      </span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-red-50"
                      >
                        2
                      </Badge>
                      <span>Mensagens muito longas que n√£o cabem na tela</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-red-50"
                      >
                        3
                      </Badge>
                      <span>
                        M√∫ltiplos toasts simult√¢neos que confundem o usu√°rio
                      </span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-red-50"
                      >
                        4
                      </Badge>
                      <span>Toasts que desaparecem muito rapidamente</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Badge
                        variant="outline"
                        className="text-xs mt-0.5 bg-red-50"
                      >
                        5
                      </Badge>
                      <span>
                        Usar para valida√ß√£o de formul√°rios em tempo real
                      </span>
                    </li>
                  </ul>
                </div>
              </div>

              <div className="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <h4 className="font-medium text-blue-800 mb-2">
                  üí° Dica Extra
                </h4>
                <p className="text-sm text-blue-700">
                  O componente Toast do shadcn/ui utiliza a biblioteca Sonner
                  por baixo dos panos, que oferece excelente performance e
                  acessibilidade. Lembre-se de importar e configurar o Toaster
                  em seu layout principal para que os toasts funcionem
                  corretamente.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
